/**
 * Autogenerated by Avro
 * 
 * DO NOT EDIT DIRECTLY
 */
package com.cloudera.services.hbase;  
@SuppressWarnings("all")
@org.apache.avro.specific.AvroGenerated
public class CombinedPWData extends org.apache.avro.specific.SpecificRecordBase implements org.apache.avro.specific.SpecificRecord {
  public static final org.apache.avro.Schema SCHEMA$ = new org.apache.avro.Schema.Parser().parse("{\"type\":\"record\",\"name\":\"CombinedPWData\",\"namespace\":\"com.cloudera.services.hbase\",\"fields\":[{\"name\":\"id\",\"type\":[\"null\",{\"type\":\"string\",\"avro.java.string\":\"String\"}],\"default\":null},{\"name\":\"col1\",\"type\":[\"null\",{\"type\":\"string\",\"avro.java.string\":\"String\"}],\"default\":null},{\"name\":\"utility_name\",\"type\":[\"null\",{\"type\":\"string\",\"avro.java.string\":\"String\"}],\"doc\":\"Type inferred from 'A & N Electric Coop'\",\"default\":null},{\"name\":\"state\",\"type\":[\"null\",{\"type\":\"string\",\"avro.java.string\":\"String\"}],\"doc\":\"Type inferred from 'MD'\",\"default\":null},{\"name\":\"service_type\",\"type\":[\"null\",{\"type\":\"string\",\"avro.java.string\":\"String\"}],\"doc\":\"Type inferred from 'Bundled'\",\"default\":null},{\"name\":\"ownership\",\"type\":[\"null\",{\"type\":\"string\",\"avro.java.string\":\"String\"}],\"doc\":\"Type inferred from 'Cooperative'\",\"default\":null},{\"name\":\"comm_rate\",\"type\":[\"null\",{\"type\":\"string\",\"avro.java.string\":\"String\"}],\"doc\":\"Type inferred from '0.1255'\",\"default\":null},{\"name\":\"ind_rate\",\"type\":[\"null\",{\"type\":\"string\",\"avro.java.string\":\"String\"}],\"doc\":\"Type inferred from '0'\",\"default\":null},{\"name\":\"res_rate\",\"type\":[\"null\",{\"type\":\"string\",\"avro.java.string\":\"String\"}],\"doc\":\"Type inferred from '0.120810564663'\",\"default\":null}]}");
  public static org.apache.avro.Schema getClassSchema() { return SCHEMA$; }
   private java.lang.String id;
   private java.lang.String col1;
  /** Type inferred from 'A & N Electric Coop' */
   private java.lang.String utility_name;
  /** Type inferred from 'MD' */
   private java.lang.String state;
  /** Type inferred from 'Bundled' */
   private java.lang.String service_type;
  /** Type inferred from 'Cooperative' */
   private java.lang.String ownership;
  /** Type inferred from '0.1255' */
   private java.lang.String comm_rate;
  /** Type inferred from '0' */
   private java.lang.String ind_rate;
  /** Type inferred from '0.120810564663' */
   private java.lang.String res_rate;

  /**
   * Default constructor.  Note that this does not initialize fields
   * to their default values from the schema.  If that is desired then
   * one should use <code>newBuilder()</code>. 
   */
  public CombinedPWData() {}

  /**
   * All-args constructor.
   */
  public CombinedPWData(java.lang.String id, java.lang.String col1, java.lang.String utility_name, java.lang.String state, java.lang.String service_type, java.lang.String ownership, java.lang.String comm_rate, java.lang.String ind_rate, java.lang.String res_rate) {
    this.id = id;
    this.col1 = col1;
    this.utility_name = utility_name;
    this.state = state;
    this.service_type = service_type;
    this.ownership = ownership;
    this.comm_rate = comm_rate;
    this.ind_rate = ind_rate;
    this.res_rate = res_rate;
  }

  public org.apache.avro.Schema getSchema() { return SCHEMA$; }
  // Used by DatumWriter.  Applications should not call. 
  public java.lang.Object get(int field$) {
    switch (field$) {
    case 0: return id;
    case 1: return col1;
    case 2: return utility_name;
    case 3: return state;
    case 4: return service_type;
    case 5: return ownership;
    case 6: return comm_rate;
    case 7: return ind_rate;
    case 8: return res_rate;
    default: throw new org.apache.avro.AvroRuntimeException("Bad index");
    }
  }
  // Used by DatumReader.  Applications should not call. 
  @SuppressWarnings(value="unchecked")
  public void put(int field$, java.lang.Object value$) {
    switch (field$) {
    case 0: id = (java.lang.String)value$; break;
    case 1: col1 = (java.lang.String)value$; break;
    case 2: utility_name = (java.lang.String)value$; break;
    case 3: state = (java.lang.String)value$; break;
    case 4: service_type = (java.lang.String)value$; break;
    case 5: ownership = (java.lang.String)value$; break;
    case 6: comm_rate = (java.lang.String)value$; break;
    case 7: ind_rate = (java.lang.String)value$; break;
    case 8: res_rate = (java.lang.String)value$; break;
    default: throw new org.apache.avro.AvroRuntimeException("Bad index");
    }
  }

  /**
   * Gets the value of the 'id' field.
   */
  public java.lang.String getId() {
    return id;
  }

  /**
   * Sets the value of the 'id' field.
   * @param value the value to set.
   */
  public void setId(java.lang.String value) {
    this.id = value;
  }

  /**
   * Gets the value of the 'col1' field.
   */
  public java.lang.String getCol1() {
    return col1;
  }

  /**
   * Sets the value of the 'col1' field.
   * @param value the value to set.
   */
  public void setCol1(java.lang.String value) {
    this.col1 = value;
  }

  /**
   * Gets the value of the 'utility_name' field.
   * Type inferred from 'A & N Electric Coop'   */
  public java.lang.String getUtilityName() {
    return utility_name;
  }

  /**
   * Sets the value of the 'utility_name' field.
   * Type inferred from 'A & N Electric Coop'   * @param value the value to set.
   */
  public void setUtilityName(java.lang.String value) {
    this.utility_name = value;
  }

  /**
   * Gets the value of the 'state' field.
   * Type inferred from 'MD'   */
  public java.lang.String getState() {
    return state;
  }

  /**
   * Sets the value of the 'state' field.
   * Type inferred from 'MD'   * @param value the value to set.
   */
  public void setState(java.lang.String value) {
    this.state = value;
  }

  /**
   * Gets the value of the 'service_type' field.
   * Type inferred from 'Bundled'   */
  public java.lang.String getServiceType() {
    return service_type;
  }

  /**
   * Sets the value of the 'service_type' field.
   * Type inferred from 'Bundled'   * @param value the value to set.
   */
  public void setServiceType(java.lang.String value) {
    this.service_type = value;
  }

  /**
   * Gets the value of the 'ownership' field.
   * Type inferred from 'Cooperative'   */
  public java.lang.String getOwnership() {
    return ownership;
  }

  /**
   * Sets the value of the 'ownership' field.
   * Type inferred from 'Cooperative'   * @param value the value to set.
   */
  public void setOwnership(java.lang.String value) {
    this.ownership = value;
  }

  /**
   * Gets the value of the 'comm_rate' field.
   * Type inferred from '0.1255'   */
  public java.lang.String getCommRate() {
    return comm_rate;
  }

  /**
   * Sets the value of the 'comm_rate' field.
   * Type inferred from '0.1255'   * @param value the value to set.
   */
  public void setCommRate(java.lang.String value) {
    this.comm_rate = value;
  }

  /**
   * Gets the value of the 'ind_rate' field.
   * Type inferred from '0'   */
  public java.lang.String getIndRate() {
    return ind_rate;
  }

  /**
   * Sets the value of the 'ind_rate' field.
   * Type inferred from '0'   * @param value the value to set.
   */
  public void setIndRate(java.lang.String value) {
    this.ind_rate = value;
  }

  /**
   * Gets the value of the 'res_rate' field.
   * Type inferred from '0.120810564663'   */
  public java.lang.String getResRate() {
    return res_rate;
  }

  /**
   * Sets the value of the 'res_rate' field.
   * Type inferred from '0.120810564663'   * @param value the value to set.
   */
  public void setResRate(java.lang.String value) {
    this.res_rate = value;
  }

  /** Creates a new CombinedPWData RecordBuilder */
  public static com.cloudera.services.hbase.CombinedPWData.Builder newBuilder() {
    return new com.cloudera.services.hbase.CombinedPWData.Builder();
  }
  
  /** Creates a new CombinedPWData RecordBuilder by copying an existing Builder */
  public static com.cloudera.services.hbase.CombinedPWData.Builder newBuilder(com.cloudera.services.hbase.CombinedPWData.Builder other) {
    return new com.cloudera.services.hbase.CombinedPWData.Builder(other);
  }
  
  /** Creates a new CombinedPWData RecordBuilder by copying an existing CombinedPWData instance */
  public static com.cloudera.services.hbase.CombinedPWData.Builder newBuilder(com.cloudera.services.hbase.CombinedPWData other) {
    return new com.cloudera.services.hbase.CombinedPWData.Builder(other);
  }
  
  /**
   * RecordBuilder for CombinedPWData instances.
   */
  public static class Builder extends org.apache.avro.specific.SpecificRecordBuilderBase<CombinedPWData>
    implements org.apache.avro.data.RecordBuilder<CombinedPWData> {

    private java.lang.String id;
    private java.lang.String col1;
    private java.lang.String utility_name;
    private java.lang.String state;
    private java.lang.String service_type;
    private java.lang.String ownership;
    private java.lang.String comm_rate;
    private java.lang.String ind_rate;
    private java.lang.String res_rate;

    /** Creates a new Builder */
    private Builder() {
      super(com.cloudera.services.hbase.CombinedPWData.SCHEMA$);
    }
    
    /** Creates a Builder by copying an existing Builder */
    private Builder(com.cloudera.services.hbase.CombinedPWData.Builder other) {
      super(other);
      if (isValidValue(fields()[0], other.id)) {
        this.id = data().deepCopy(fields()[0].schema(), other.id);
        fieldSetFlags()[0] = true;
      }
      if (isValidValue(fields()[1], other.col1)) {
        this.col1 = data().deepCopy(fields()[1].schema(), other.col1);
        fieldSetFlags()[1] = true;
      }
      if (isValidValue(fields()[2], other.utility_name)) {
        this.utility_name = data().deepCopy(fields()[2].schema(), other.utility_name);
        fieldSetFlags()[2] = true;
      }
      if (isValidValue(fields()[3], other.state)) {
        this.state = data().deepCopy(fields()[3].schema(), other.state);
        fieldSetFlags()[3] = true;
      }
      if (isValidValue(fields()[4], other.service_type)) {
        this.service_type = data().deepCopy(fields()[4].schema(), other.service_type);
        fieldSetFlags()[4] = true;
      }
      if (isValidValue(fields()[5], other.ownership)) {
        this.ownership = data().deepCopy(fields()[5].schema(), other.ownership);
        fieldSetFlags()[5] = true;
      }
      if (isValidValue(fields()[6], other.comm_rate)) {
        this.comm_rate = data().deepCopy(fields()[6].schema(), other.comm_rate);
        fieldSetFlags()[6] = true;
      }
      if (isValidValue(fields()[7], other.ind_rate)) {
        this.ind_rate = data().deepCopy(fields()[7].schema(), other.ind_rate);
        fieldSetFlags()[7] = true;
      }
      if (isValidValue(fields()[8], other.res_rate)) {
        this.res_rate = data().deepCopy(fields()[8].schema(), other.res_rate);
        fieldSetFlags()[8] = true;
      }
    }
    
    /** Creates a Builder by copying an existing CombinedPWData instance */
    private Builder(com.cloudera.services.hbase.CombinedPWData other) {
            super(com.cloudera.services.hbase.CombinedPWData.SCHEMA$);
      if (isValidValue(fields()[0], other.id)) {
        this.id = data().deepCopy(fields()[0].schema(), other.id);
        fieldSetFlags()[0] = true;
      }
      if (isValidValue(fields()[1], other.col1)) {
        this.col1 = data().deepCopy(fields()[1].schema(), other.col1);
        fieldSetFlags()[1] = true;
      }
      if (isValidValue(fields()[2], other.utility_name)) {
        this.utility_name = data().deepCopy(fields()[2].schema(), other.utility_name);
        fieldSetFlags()[2] = true;
      }
      if (isValidValue(fields()[3], other.state)) {
        this.state = data().deepCopy(fields()[3].schema(), other.state);
        fieldSetFlags()[3] = true;
      }
      if (isValidValue(fields()[4], other.service_type)) {
        this.service_type = data().deepCopy(fields()[4].schema(), other.service_type);
        fieldSetFlags()[4] = true;
      }
      if (isValidValue(fields()[5], other.ownership)) {
        this.ownership = data().deepCopy(fields()[5].schema(), other.ownership);
        fieldSetFlags()[5] = true;
      }
      if (isValidValue(fields()[6], other.comm_rate)) {
        this.comm_rate = data().deepCopy(fields()[6].schema(), other.comm_rate);
        fieldSetFlags()[6] = true;
      }
      if (isValidValue(fields()[7], other.ind_rate)) {
        this.ind_rate = data().deepCopy(fields()[7].schema(), other.ind_rate);
        fieldSetFlags()[7] = true;
      }
      if (isValidValue(fields()[8], other.res_rate)) {
        this.res_rate = data().deepCopy(fields()[8].schema(), other.res_rate);
        fieldSetFlags()[8] = true;
      }
    }

    /** Gets the value of the 'id' field */
    public java.lang.String getId() {
      return id;
    }
    
    /** Sets the value of the 'id' field */
    public com.cloudera.services.hbase.CombinedPWData.Builder setId(java.lang.String value) {
      validate(fields()[0], value);
      this.id = value;
      fieldSetFlags()[0] = true;
      return this; 
    }
    
    /** Checks whether the 'id' field has been set */
    public boolean hasId() {
      return fieldSetFlags()[0];
    }
    
    /** Clears the value of the 'id' field */
    public com.cloudera.services.hbase.CombinedPWData.Builder clearId() {
      id = null;
      fieldSetFlags()[0] = false;
      return this;
    }

    /** Gets the value of the 'col1' field */
    public java.lang.String getCol1() {
      return col1;
    }
    
    /** Sets the value of the 'col1' field */
    public com.cloudera.services.hbase.CombinedPWData.Builder setCol1(java.lang.String value) {
      validate(fields()[1], value);
      this.col1 = value;
      fieldSetFlags()[1] = true;
      return this; 
    }
    
    /** Checks whether the 'col1' field has been set */
    public boolean hasCol1() {
      return fieldSetFlags()[1];
    }
    
    /** Clears the value of the 'col1' field */
    public com.cloudera.services.hbase.CombinedPWData.Builder clearCol1() {
      col1 = null;
      fieldSetFlags()[1] = false;
      return this;
    }

    /** Gets the value of the 'utility_name' field */
    public java.lang.String getUtilityName() {
      return utility_name;
    }
    
    /** Sets the value of the 'utility_name' field */
    public com.cloudera.services.hbase.CombinedPWData.Builder setUtilityName(java.lang.String value) {
      validate(fields()[2], value);
      this.utility_name = value;
      fieldSetFlags()[2] = true;
      return this; 
    }
    
    /** Checks whether the 'utility_name' field has been set */
    public boolean hasUtilityName() {
      return fieldSetFlags()[2];
    }
    
    /** Clears the value of the 'utility_name' field */
    public com.cloudera.services.hbase.CombinedPWData.Builder clearUtilityName() {
      utility_name = null;
      fieldSetFlags()[2] = false;
      return this;
    }

    /** Gets the value of the 'state' field */
    public java.lang.String getState() {
      return state;
    }
    
    /** Sets the value of the 'state' field */
    public com.cloudera.services.hbase.CombinedPWData.Builder setState(java.lang.String value) {
      validate(fields()[3], value);
      this.state = value;
      fieldSetFlags()[3] = true;
      return this; 
    }
    
    /** Checks whether the 'state' field has been set */
    public boolean hasState() {
      return fieldSetFlags()[3];
    }
    
    /** Clears the value of the 'state' field */
    public com.cloudera.services.hbase.CombinedPWData.Builder clearState() {
      state = null;
      fieldSetFlags()[3] = false;
      return this;
    }

    /** Gets the value of the 'service_type' field */
    public java.lang.String getServiceType() {
      return service_type;
    }
    
    /** Sets the value of the 'service_type' field */
    public com.cloudera.services.hbase.CombinedPWData.Builder setServiceType(java.lang.String value) {
      validate(fields()[4], value);
      this.service_type = value;
      fieldSetFlags()[4] = true;
      return this; 
    }
    
    /** Checks whether the 'service_type' field has been set */
    public boolean hasServiceType() {
      return fieldSetFlags()[4];
    }
    
    /** Clears the value of the 'service_type' field */
    public com.cloudera.services.hbase.CombinedPWData.Builder clearServiceType() {
      service_type = null;
      fieldSetFlags()[4] = false;
      return this;
    }

    /** Gets the value of the 'ownership' field */
    public java.lang.String getOwnership() {
      return ownership;
    }
    
    /** Sets the value of the 'ownership' field */
    public com.cloudera.services.hbase.CombinedPWData.Builder setOwnership(java.lang.String value) {
      validate(fields()[5], value);
      this.ownership = value;
      fieldSetFlags()[5] = true;
      return this; 
    }
    
    /** Checks whether the 'ownership' field has been set */
    public boolean hasOwnership() {
      return fieldSetFlags()[5];
    }
    
    /** Clears the value of the 'ownership' field */
    public com.cloudera.services.hbase.CombinedPWData.Builder clearOwnership() {
      ownership = null;
      fieldSetFlags()[5] = false;
      return this;
    }

    /** Gets the value of the 'comm_rate' field */
    public java.lang.String getCommRate() {
      return comm_rate;
    }
    
    /** Sets the value of the 'comm_rate' field */
    public com.cloudera.services.hbase.CombinedPWData.Builder setCommRate(java.lang.String value) {
      validate(fields()[6], value);
      this.comm_rate = value;
      fieldSetFlags()[6] = true;
      return this; 
    }
    
    /** Checks whether the 'comm_rate' field has been set */
    public boolean hasCommRate() {
      return fieldSetFlags()[6];
    }
    
    /** Clears the value of the 'comm_rate' field */
    public com.cloudera.services.hbase.CombinedPWData.Builder clearCommRate() {
      comm_rate = null;
      fieldSetFlags()[6] = false;
      return this;
    }

    /** Gets the value of the 'ind_rate' field */
    public java.lang.String getIndRate() {
      return ind_rate;
    }
    
    /** Sets the value of the 'ind_rate' field */
    public com.cloudera.services.hbase.CombinedPWData.Builder setIndRate(java.lang.String value) {
      validate(fields()[7], value);
      this.ind_rate = value;
      fieldSetFlags()[7] = true;
      return this; 
    }
    
    /** Checks whether the 'ind_rate' field has been set */
    public boolean hasIndRate() {
      return fieldSetFlags()[7];
    }
    
    /** Clears the value of the 'ind_rate' field */
    public com.cloudera.services.hbase.CombinedPWData.Builder clearIndRate() {
      ind_rate = null;
      fieldSetFlags()[7] = false;
      return this;
    }

    /** Gets the value of the 'res_rate' field */
    public java.lang.String getResRate() {
      return res_rate;
    }
    
    /** Sets the value of the 'res_rate' field */
    public com.cloudera.services.hbase.CombinedPWData.Builder setResRate(java.lang.String value) {
      validate(fields()[8], value);
      this.res_rate = value;
      fieldSetFlags()[8] = true;
      return this; 
    }
    
    /** Checks whether the 'res_rate' field has been set */
    public boolean hasResRate() {
      return fieldSetFlags()[8];
    }
    
    /** Clears the value of the 'res_rate' field */
    public com.cloudera.services.hbase.CombinedPWData.Builder clearResRate() {
      res_rate = null;
      fieldSetFlags()[8] = false;
      return this;
    }

    @Override
    public CombinedPWData build() {
      try {
        CombinedPWData record = new CombinedPWData();
        record.id = fieldSetFlags()[0] ? this.id : (java.lang.String) defaultValue(fields()[0]);
        record.col1 = fieldSetFlags()[1] ? this.col1 : (java.lang.String) defaultValue(fields()[1]);
        record.utility_name = fieldSetFlags()[2] ? this.utility_name : (java.lang.String) defaultValue(fields()[2]);
        record.state = fieldSetFlags()[3] ? this.state : (java.lang.String) defaultValue(fields()[3]);
        record.service_type = fieldSetFlags()[4] ? this.service_type : (java.lang.String) defaultValue(fields()[4]);
        record.ownership = fieldSetFlags()[5] ? this.ownership : (java.lang.String) defaultValue(fields()[5]);
        record.comm_rate = fieldSetFlags()[6] ? this.comm_rate : (java.lang.String) defaultValue(fields()[6]);
        record.ind_rate = fieldSetFlags()[7] ? this.ind_rate : (java.lang.String) defaultValue(fields()[7]);
        record.res_rate = fieldSetFlags()[8] ? this.res_rate : (java.lang.String) defaultValue(fields()[8]);
        return record;
      } catch (Exception e) {
        throw new org.apache.avro.AvroRuntimeException(e);
      }
    }
  }
}
